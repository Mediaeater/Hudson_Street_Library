name: Deploy Hudson Street Library

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Build and test the CMS
  build-cms:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './cms/package.json'
    
    - name: Install Dependencies
      run: |
        cd cms
        npm install
    
    # Add validation or tests for the schema
    - name: Validate Schema
      run: |
        cd cms
        echo "Schema validation would run here"
    
  # Build and deploy the frontend
  build-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: './frontend/package.json'
    
    - name: Install Dependencies
      run: |
        cd frontend
        npm install
    
    - name: Build
      run: |
        cd frontend
        npm run build
      env:
        NEXT_PUBLIC_DIRECTUS_URL: ${{ secrets.DIRECTUS_URL }}
    
    # For Vercel deployment (if using Vercel)
    - name: Deploy to Vercel
      if: github.event_name != 'pull_request'
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
        vercel-args: '--prod'
    
    # Uncomment for other deployment options
    # For AWS S3 + CloudFront deployment
    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-east-1
    #
    # - name: Deploy to S3
    #   run: |
    #     aws s3 sync ./frontend/out s3://your-bucket-name/ --delete
    #
    # - name: Invalidate CloudFront
    #   run: |
    #     aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"